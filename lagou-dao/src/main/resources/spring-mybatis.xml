<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
    default-autowire="byName">
    <!--设置扫描的注解包，除去控制器，控制器由springmvc来扫描-->
    <context:component-scan base-package="com.etc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>
    <!-- 设置与数据库配置文件关联 引入配置文件 读取数据库有关的配置信息-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>
    <!--3  配置数据源连接池有关的属性 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
        <property name="driverClassName" value="${driver}"></property>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>
    <!--4  mybatis的配置  SqlSessionFactoryBean的配置和注入操作-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- ① 配置和数据源有关 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- ②其他的属性 和映射文件有关的配置信息 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml">
        </property>
        <!--对实体类起别名-->
        <property name="typeAliasesPackage" value="com.etc.entity"></property>
        <!-- 配置pagehelper分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>helperDialect=mysql</value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!-- 5 配置扫描器 MapperScannerConfigurer 需要用到mybatis-spring.jar-->
    <!-- spring跟mybatis的整合，扫描所有的dao下的接口，然后创建接口的实现类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--所在Dao接口所在的包-->
        <property name="basePackage" value="com.etc.dao"></property>
        <!--是名字注入,用value-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
    </bean>
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"></bean>
    <!--配置通知的使用-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--只读事务,不更改值-->
            <tx:method name="*get" read-only="true"/>
            <tx:method name="*query" read-only="true"/>
            <!-- 其他方法使用默认的事务设置  propagation="REQUIRED"传播行为 如果有事务, 那么加入事务, 没有的话新建一个(默认情况下)-->
            <tx:method name="*" propagation="REQUIRED"></tx:method>
        </tx:attributes>
    </tx:advice>
    <!--aop配置-->
    <aop:config>
        <!--切入点配置-->
        <aop:pointcut id="pointCut" expression="execution(* com.etc.service.impl.*.*(..))"></aop:pointcut>
        <!--配置切入点与通知器的关联-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"></aop:advisor>
    </aop:config>
</beans>